name: push

on:
  push:

env:
  CI: true
  GH_BOT_NAME: GitHub Action
  GH_BOT_EMAIL: action@github.com

jobs:
  push:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    name: continuous delivery

    runs-on: ubuntu-latest

    env:
      NPM_CONFIG_CACHE: $HOME/.npm
      NPM_CACHE_KEY: build-node-modules-cache

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Determine Node.js version to use
        run: echo "::set-output name=version::$(cat .nvmrc)"
        id: nvm

      # https://github.com/actions/setup-node
      - name: Setup Node.js ${{ steps.nvm.outputs.version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.version }}

      # https://github.com/actions/cache
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ env.NPM_CONFIG_CACHE }}
          key: ${{ env.NPM_CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ env.npm_cache_key }}-

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      # https://github.com/codecov/codecov-action
      - name: Upload Code Coverage
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          directory: ./build/coverage

      - name: Release
        env:
          GIT_AUTHOR_NAME: ${{ env.GH_BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ env.GH_BOT_EMAIL }}

          GIT_COMMITTER_NAME: ${{ env.GH_BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ env.GH_BOT_EMAIL }}

          GITHUB_TOKEN: ${{ github.token }}
        run: npm run release
